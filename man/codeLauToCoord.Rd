% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codeLauToCoord.R
\name{codeLauToCoord}
\alias{codeLauToCoord}
\title{Fonction de passage entre code LAU de communes etrangeres et coordonnees au centroide ou a un point situe sur la commune.}
\usage{
codeLauToCoord(codePays, codeLau, type = "pos")
}
\arguments{
\item{codePays}{vecteur texte. Code pays sur 2 caractères selon la codification des pays et des territoires étrangers.}

\item{codeLau}{vecteur texte. Code LAU de communes étrangères.}

\item{type}{texte. Type de point souhaité. A choisir parmi "centroide" (barycentre de la commune) ou "pos" par défaut (point sur la commune).}
}
\value{
Un data.frame de trois colonnes "code", "lon" et "lat".
}
\description{
La fonction codeLauToCoord permet de récupérer des coordonnées WGS84 (EPSG 4326) de plusieurs communes étrangères à partir des codes LAU.

Les points en sortie correspondent aux centroïdes ou à des points situés obligatoirement à l'intérieur de la commune,
calculés selon l'algorithme spécifique "point_on_surface".

Selon la morphologie du contour de la commune, le centroïde peut être situé en-dehors de ses limites.
Pour que le point soit obligatoirement dans la commune, il faut alors spécifier type = "pos" (point_on_surface).

Les codes pays, sur 2 caractères, sont consultables sur insee.fr (https://www.insee.fr/fr/information/2028273).

Les codes LAU sont consultables sur le site d'eurostat (https://ec.europa.eu/eurostat/fr/web/nuts/local-administrative-units).

Les communes LAU sont en géographie n-1 (dernier millésime validé par eurostat).
Le champ couvert par metric.osrm contient les LAU de plusieurs régions frontalières à la France, hors Andorre et Monaco.
La liste exhaustive des codes LAU entrant dans le champ de metric.osrm est disponible depuis un fichier csv en exécutant cette commande :

code_gisco <- rio::import(system.file("extdata","listeCodesGISCO.csv", package = "metric.osrm"))

Il s'agit du code GISCO qui est la concaténation du code pays et du code LAU. En effet, un code LAU d'un pays peut être identique à celui d'un autre.
Afin de garantir l'unicité du code, il est préférable d'utiliser le code GISCO, issu d'eurostat (https://ec.europa.eu/eurostat/fr/web/gisco).

Les codes communes français sont ignorés. Utilisez, pour eux, la fonction codeComToCoord.
}
\examples{
# Renvoie les coordonnees des points sur la surface des communes de Bruxelles (21004)
# de Liege (62063), de Luxembourg (0304) et de Stuttgard (08111000).
codeLauToCoord(codePays = c("BE","BE","LU","DE"),
               codeLau = c("21004","62063","0304","08111000"),
               type = "pos")

# Renvoie les coordonnees des centroides des communes des communes de Bruxelles (21004)
# de Liege (62063), de Luxembourg (0304) et de Stuttgard (08111000).
codeLauToCoord(codePays = c("BE","BE","LU","DE"),
               codeLau = c("21004","62063","0304","08111000"),
               type = "centroide")

# Ajout de Metz (57463) et de Strasbourg (67482).
codeLauToCoord(codePays = c("FR","FR","BE","BE","LU","DE"),
               codeLau = c("57463","67482","21004","62063","0304","08111000"),
               type = "pos")

# Ajout d'une commune etrangere hors champ de metric.osrm, Berlin (11000000).
codeLauToCoord(codePays = c("BE","BE","LU","DE","DE"),
               codeLau = c("21004","62063","0304","08111000","11000000"),
               type = "pos")

}
