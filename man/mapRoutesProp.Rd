% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapRoutesProp.R
\name{mapRoutesProp}
\alias{mapRoutesProp}
\title{Visualiser sur une carte les traces avec une epaisseur variable}
\usage{
mapRoutesProp(
  res,
  fonds = NULL,
  nbLargeurs = 5,
  nbFlux = 1,
  opaciteOSM = 0.5,
  interactive = FALSE,
  mapProxy = NULL
)
}
\arguments{
\item{res}{liste d'objets sp, sf ou data.frame.}

\item{fonds}{liste d'objets sp ou sf.}

\item{nbLargeurs}{numérique. Nombre de tracés de largeurs différentes. Par défaut 5.}

\item{nbFlux}{vecteur numérique. Nombre de flux (ou de trajets) par tracé. Par défaut 1.}

\item{opaciteOSM}{numérique. Entre 0 et 1, opacité du fond OpenStreetMap. Par défaut 0.5.}

\item{interactive}{booléen. Choix du contexte d'exécution. Si TRUE, contexte shiny. Par défaut FALSE.}

\item{mapProxy}{objet leaflet ou leaflet_proxy. Pour l'intégration des fonctions leaflet dans les applications shiny. Par defaut NULL.}
}
\value{
une liste de deux éléments : un objet leaflet et un objet sf LINESTRING ou MULTILINESTRING.
}
\description{
La fonction mapRoutesProp permet de visualiser les tracés avec une épaisseur variable selon le nombre de passages par tronçon de route.
}
\details{
Plus le nombre de trajets à représenter est important, plus le temps de calcul sera élevé.

En entrée, l'objet res doit être une liste de résultats de la fonction metricOsrmRoute. Les résultats peuvent être des objets sf, sp ou data.frame selon le choix du paramètre returnclass de metricOsrmRoute.

Pour optimiser les temps de calcul, il est préférable de choisir returnclass = NULL pour que la fonction metricOsrmRoute retourne un data.frame de coordonnées pour chaque trajet.

En sortie, la fonction mapRoutesProp renvoie une liste de deux éléments :

- la carte leaflet qu'il est possible d'afficher directement dans le viewer ;

- un objet sf, qui indique le poids (colonne weight) de chaque tronçon de route et sa largeur (colonne classes).

A partir de cet objet sf, il est possible de filtrer les poids pour ne représenter que des tronçons pertinents.
Par exemple, les routes étant empruntées plus de 5 fois (weight > 5).

Pour une visualisation sur une carte des tracés de routes après avoir appliqué un filtre sur les poids, vous pouvez utiliser la fonction mapRoutes.

La colonne classes permet de modifier la largeur des tronçons de route par poids.

L'argument nbLargeurs permet de choisir le nombre de largeurs différentes pour l'ensemble des tracés.

L'argument nbFlux permet de renseigner le nombre de flux pour chaque tracé. Par défaut, chaque tracé correspond à un trajet.
}
\examples{
# Specification d'un serveur osrm obligatoire pour executer les exemples
options(osrm.server = "https://metric-osrm-backend.lab.sspcloud.fr/")

# Specification du profil
options(osrm.profile = "driving")

# Calcul de deux traces de route.
dt1_route_f <- metricOsrmRoute(src = data.frame(lon = 4.92,
                                                lat = 46.15),
                              dst = data.frame(lon = 4.72,
                                                lat = 45.92),
                              overview = "full",
                              returnclass = NULL)

dt2_route_f <- metricOsrmRoute(src = data.frame(lon = 4.92,
                                                lat = 46.15),
                              dst = data.frame(lon = 4.82,
                                                lat = 45.85),
                              overview = "full",
                              returnclass = NULL)

# Visualisation des deux traces de route.
# Le 1er trace est emprunte 2 fois, le second 3 fois.
# Le trace commun est donc emprunte 5 fois.
mapRoutesProp(res = list(dt1_route_f[,c(ncol(dt1_route_f)-1,ncol(dt1_route_f))],
                         dt2_route_f[,c(ncol(dt2_route_f)-1,ncol(dt2_route_f))]),
              nbLargeurs = 3,
              nbFlux = c(2,3))

}
