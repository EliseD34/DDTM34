% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapRoutes.R
\name{mapRoutes}
\alias{mapRoutes}
\title{Visualiser le trace des trajets sur une carte}
\usage{
mapRoutes(
  res,
  fonds = NULL,
  largeurRoute = 1,
  opaciteOSM = 0.5,
  mapProxy = NULL
)
}
\arguments{
\item{res}{liste d'objets sp (LINES) ou sf (LINESTRING ou MULTILINESTRING).}

\item{fonds}{liste d'objets sp ou sf.}

\item{largeurRoute}{numérique. Largeur de la route.}

\item{opaciteOSM}{numérique. Entre 0 et 1, opacité du fond OpenStreetMap. Par défaut 0.5.}

\item{mapProxy}{objet leaflet ou leaflet_proxy. Pour l'intégration des fonctions leaflet dans les applications shiny. Par defaut NULL.}
}
\value{
objet leaflet
}
\description{
La fonction mapRoutes permet de visualiser les tracés des routes sur une carte.
}
\details{
Plus le nombre de routes est important, plus le temps de calcul est élévé.

En entrée, l'objet res doit être une liste d'objet géométrique composé de lignes LINES si sp ou MULTILINESTRING si sf.

Cet objet peut être une liste de résultats de la fonction metricOsrmRoute renvoyant des tracés de route. Les résultats peuvent être des objets sp ou sf
selon le choix du paramètre returnclass de metricOsrmRoute.

L'objet res peut également être le résultat de la fonction mapRoutesProp (2ème élément de la liste retournée).

Cet objet comportera alors deux variables weight et classes (logiquement filtrés) pour représenter l'épaisseur des tracés sur la carte selon leur poids (voir fonction mapRoutesProp).
Dans ce cas, l'argument largeurRoute sera ignoré.

En sortie, la fonction mapRoutes renvoie la carte leaflet qu'il est possible d'afficher directement dans le viewer.
}
\examples{
# Specification d'un serveur osrm obligatoire pour executer les exemples
options(osrm.server = "https://metric-osrm-backend.lab.sspcloud.fr/")

# Specification du profil
options(osrm.profile = "driving")

# Calcul de deux traces de route.
sf1_route_f <- metricOsrmRoute(src = data.frame(lon = 4.92,
                                                lat = 46.15),
                              dst = data.frame(lon = 4.72,
                                                lat = 45.92),
                              overview = "full",
                              returnclass = "sf")

sf2_route_f <- metricOsrmRoute(src = data.frame(lon = 4.92,
                                                lat = 46.15),
                              dst = data.frame(lon = 4.82,
                                                lat = 45.85),
                              overview = "full",
                              returnclass = "sf")

# Visualisation des deux traces de route.
mapRoutes(res = list(sf1_route_f, sf2_route_f))

}
